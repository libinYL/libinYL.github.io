<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李斌 - LBYL</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://libinyl.github.io/"/>
  <updated>2018-06-22T04:14:25.528Z</updated>
  <id>http://libinyl.github.io/</id>
  
  <author>
    <name>李斌</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>diary20180622</title>
    <link href="http://libinyl.github.io/2018/06/22/diary20180622/"/>
    <id>http://libinyl.github.io/2018/06/22/diary20180622/</id>
    <published>2018-06-22T03:00:39.000Z</published>
    <updated>2018-06-22T04:14:25.528Z</updated>
    
    <content type="html"><![CDATA[<p><code>12:09:55</code> 上午毕业典礼。</p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180622%E6%AF%95%E4%B8%9A%E5%85%B8%E7%A4%BC.jpg" alt=""><br><em>鸟巢全景</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;12:09:55&lt;/code&gt; 上午毕业典礼。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180622%E6%AF%
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>diary20180621</title>
    <link href="http://libinyl.github.io/2018/06/21/diary20180621/"/>
    <id>http://libinyl.github.io/2018/06/21/diary20180621/</id>
    <published>2018-06-21T08:07:03.000Z</published>
    <updated>2018-06-21T08:24:37.477Z</updated>
    
    <content type="html"><![CDATA[<p><code>16:12:53</code> 去河东买药，竟然无意中去了咖啡之翼大厦。好矮的大厦。。</p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180621%E5%92%96%E5%95%A1%E4%B9%8B%E7%BF%BC%E5%A4%A7%E5%8E%A6.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;16:12:53&lt;/code&gt; 去河东买药，竟然无意中去了咖啡之翼大厦。好矮的大厦。。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>note-maven-basic</title>
    <link href="http://libinyl.github.io/2018/06/20/note-maven-basic/"/>
    <id>http://libinyl.github.io/2018/06/20/note-maven-basic/</id>
    <published>2018-06-20T10:12:05.000Z</published>
    <updated>2018-06-20T10:36:14.896Z</updated>
    
    <content type="html"><![CDATA[<h1 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h1><ul><li>maven有自己的生命周期，从开始执行到结束，依次经过。</li><li>maven的每个插件都有一个目标。</li><li>maven把某个目标绑定在某个生命周期阶段</li></ul><p>这样一来，随着生命周期的执行，不同目标也随之执行。</p><h1 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h1><p>maven有三种周期：</p><ul><li>清洁（clean）</li><li>默认（default）</li><li>站点（site）</li></ul><h2 id="“清洁”的声明周期"><a href="#“清洁”的声明周期" class="headerlink" title="“清洁”的声明周期"></a>“清洁”的声明周期</h2><table><thead><tr><th>具体周期</th><th>作用</th></tr></thead><tbody><tr><td>预清洁（pre-clean）</td><td>执行实际项目清理之前所需的流程</td></tr><tr><td>清洁（clean）</td><td>删除以前构建生成的所有文件</td></tr><tr><td>后清洁（post-clean）</td><td>执行完成项目清理所需的流程</td></tr></tbody></table><h2 id="“默认”的生命周期"><a href="#“默认”的生命周期" class="headerlink" title="“默认”的生命周期"></a>“默认”的生命周期</h2><table><thead><tr><th>具体周期</th><th>作用</th></tr></thead><tbody><tr><td>验证（validate）</td><td>验证项目是正确的，所有必要的信息可用。</td></tr><tr><td>初始化（initialize）</td><td>初始化构建状态，例如设置属性或创建目录。</td></tr><tr><td>产生来源（generate-sources）</td><td>生成包含在编译中的任何源代码。</td></tr><tr><td>流程源（process-sources）</td><td>处理源代码，例如过滤任何值。</td></tr><tr><td>生成资源（generate-resources）</td><td>生成包含在包中的资源。</td></tr><tr><td>流程资源（process-resources）</td><td>将资源复制并处理到目标目录中，准备打包。</td></tr><tr><td>编译（compile）</td><td>编译项目的源代码。</td></tr><tr><td>工艺类（process-classes）</td><td>从编译后处理生成的文件，例如对Java类进行字节码增强。</td></tr><tr><td>生成测试来源（generate-test-sources）</td><td>生成包含在编译中的任何测试源代码。</td></tr><tr><td>流程测试来源（process-test-sources）</td><td>处理测试源代码，例如过滤任何值。</td></tr><tr><td>生成测试资源（generate-test-resources）</td><td>创建测试资源。</td></tr><tr><td>流程测试资源（process-test-resources）</td><td>将资源复制并处理到测试目标目录中。</td></tr><tr><td>测试编译（test-compile）</td><td>将测试源代码编译到测试目标目录中</td></tr><tr><td>流程检验类（process-test-classes）</td><td>从测试编译中处理生成的文件，例如对Java类进行字节码增强。对于Maven 2.0.5及以上版本。</td></tr><tr><td>测试（test）</td><td>使用合适的单元测试框架运行测试。这些测试不应该要求代码被打包或部署。</td></tr><tr><td>制备包（prepare-package）</td><td>在实际包装之前，执行必要的准备包装的操作。这通常会导致打包的处理版本的包。（Maven 2.1及以上）</td></tr><tr><td>打包（package）</td><td>采取编译的代码，并以其可分发的格式（如JAR）进行打包。</td></tr><tr><td>预集成测试（pre-integration-test）</td><td>在执行集成测试之前执行所需的操作。这可能涉及诸如设置所需环境等。</td></tr><tr><td>集成测试（integration-test）</td><td>如果需要，可以将该包过程并部署到可以运行集成测试的环境中。</td></tr><tr><td>整合后的测试（post-integration-test）</td><td>执行集成测试后执行所需的操作。这可能包括清理环境。</td></tr><tr><td>校验（verify）</td><td>运行任何检查以验证包装是否有效并符合质量标准。</td></tr><tr><td>安装（install）</td><td>将软件包安装到本地存储库中，以作为本地其他项目的依赖关系。</td></tr><tr><td>部署（deploy）</td><td>在集成或发布环境中完成，将最终软件包复制到远程存储库，以与其他开发人员和项目共享。</td></tr></tbody></table><h2 id="“站点”生命周期"><a href="#“站点”生命周期" class="headerlink" title="“站点”生命周期"></a>“站点”生命周期</h2><hr><p>具体周期 | 作用<br>预网站（pre-site） | 在实际的项目现场生成之前执行所需的进程<br>网站（site） | 生成项目的站点文档<br>后网站（post-site） | 执行完成站点生成所需的进程，并准备站点部署<br>网站部署（site-deploy） | 将生成的站点文档部署到指定的Web服务器</p><h1 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h1><p>在执行<code>mvn install</code>时，以下插件对应的目标执行：</p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/tech/mavenPackage.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;总览&quot;&gt;&lt;a href=&quot;#总览&quot; class=&quot;headerlink&quot; title=&quot;总览&quot;&gt;&lt;/a&gt;总览&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;maven有自己的生命周期，从开始执行到结束，依次经过。&lt;/li&gt;
&lt;li&gt;maven的每个插件都有一个目标。&lt;/li&gt;
&lt;li
      
    
    </summary>
    
      <category term="技·术" scheme="http://libinyl.github.io/categories/%E6%8A%80%C2%B7%E6%9C%AF/"/>
    
    
      <category term="maven" scheme="http://libinyl.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>diary20180620</title>
    <link href="http://libinyl.github.io/2018/06/20/diary20180620/"/>
    <id>http://libinyl.github.io/2018/06/20/diary20180620/</id>
    <published>2018-06-20T06:09:30.000Z</published>
    <updated>2018-06-21T08:03:34.079Z</updated>
    
    <content type="html"><![CDATA[<p><code>16:21:40</code> 来到久违的凯李，感觉非常好。上午把学士服还了。</p><p><code>18:49:19</code> 看了《maven权威指南》，这才是技术书！看的真tm爽！</p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180620maven.png" alt=""></p><p><code>20:34:49</code> 韩佳政说要请我，已截图</p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180620%E9%9F%A9%E4%BD%B3%E6%94%BF%E8%AF%B7%E6%88%91.png" alt=""></p><p><code>20:34:49</code> 离开凯李。久违的充实。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;16:21:40&lt;/code&gt; 来到久违的凯李，感觉非常好。上午把学士服还了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;18:49:19&lt;/code&gt; 看了《maven权威指南》，这才是技术书！看的真tm爽！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://yeliang1
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>diary20180619</title>
    <link href="http://libinyl.github.io/2018/06/19/diary20180619/"/>
    <id>http://libinyl.github.io/2018/06/19/diary20180619/</id>
    <published>2018-06-19T05:11:21.000Z</published>
    <updated>2018-06-19T11:31:31.269Z</updated>
    
    <content type="html"><![CDATA[<p><code>13:12:08</code> 上午打印了论文任务书，给了陈靖。去图书馆把书还了。</p><p><code>19:30:28</code> 尝试开发intellij的插件，发现git clone真是慢。进行一系列修补。胀起来是真疼，物理上自律，真是牛逼。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;13:12:08&lt;/code&gt; 上午打印了论文任务书，给了陈靖。去图书馆把书还了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;19:30:28&lt;/code&gt; 尝试开发intellij的插件，发现git clone真是慢。进行一系列修补。胀起来是真疼，物理上自律，真是牛逼。&lt;/p
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>intelliJ配置实践</title>
    <link href="http://libinyl.github.io/2018/06/18/note-intellij-config/"/>
    <id>http://libinyl.github.io/2018/06/18/note-intellij-config/</id>
    <published>2018-06-18T09:53:38.000Z</published>
    <updated>2018-06-18T09:55:49.475Z</updated>
    
    <content type="html"><![CDATA[<ul><li>原生<code>IntelliJ</code>主题，不要黑色</li><li>字体选择<code>Fira Code</code>，行距为<code>1.2</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;原生&lt;code&gt;IntelliJ&lt;/code&gt;主题，不要黑色&lt;/li&gt;
&lt;li&gt;字体选择&lt;code&gt;Fira Code&lt;/code&gt;，行距为&lt;code&gt;1.2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="技·术" scheme="http://libinyl.github.io/categories/%E6%8A%80%C2%B7%E6%9C%AF/"/>
    
    
      <category term="intelliJ" scheme="http://libinyl.github.io/tags/intelliJ/"/>
    
  </entry>
  
  <entry>
    <title>diary20180618</title>
    <link href="http://libinyl.github.io/2018/06/18/diary20180618/"/>
    <id>http://libinyl.github.io/2018/06/18/diary20180618/</id>
    <published>2018-06-18T09:02:17.000Z</published>
    <updated>2018-06-18T09:13:01.550Z</updated>
    
    <content type="html"><![CDATA[<p><code>17:12:52</code> 到医院换了药，情况良好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;17:12:52&lt;/code&gt; 到医院换了药，情况良好。&lt;/p&gt;

      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>diary20180617</title>
    <link href="http://libinyl.github.io/2018/06/17/diary20180617/"/>
    <id>http://libinyl.github.io/2018/06/17/diary20180617/</id>
    <published>2018-06-17T15:40:13.000Z</published>
    <updated>2018-06-17T15:40:56.857Z</updated>
    
    <content type="html"><![CDATA[<p><code>23:40:34</code> 折腾了两天，装了ubuntu又换了回来。实在是太折腾了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;23:40:34&lt;/code&gt; 折腾了两天，装了ubuntu又换了回来。实在是太折腾了。&lt;/p&gt;

      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>diary20180615</title>
    <link href="http://libinyl.github.io/2018/06/15/diary20180615/"/>
    <id>http://libinyl.github.io/2018/06/15/diary20180615/</id>
    <published>2018-06-15T05:15:21.000Z</published>
    <updated>2018-06-15T05:44:59.217Z</updated>
    
    <content type="html"><![CDATA[<p><code>13:44:25</code> 刷了一堆关于医学、医学生的东西，对医学从业者毕恭毕敬、肃然起敬。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;13:44:25&lt;/code&gt; 刷了一堆关于医学、医学生的东西，对医学从业者毕恭毕敬、肃然起敬。&lt;/p&gt;

      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>diary20180614</title>
    <link href="http://libinyl.github.io/2018/06/14/diary20180614/"/>
    <id>http://libinyl.github.io/2018/06/14/diary20180614/</id>
    <published>2018-06-14T13:18:14.000Z</published>
    <updated>2018-06-14T13:37:55.840Z</updated>
    
    <content type="html"><![CDATA[<p><code>21:37:27</code> 手术完成，白天疼了两个小时，基本就没感觉了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;21:37:27&lt;/code&gt; 手术完成，白天疼了两个小时，基本就没感觉了。&lt;/p&gt;

      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>diary20180613</title>
    <link href="http://libinyl.github.io/2018/06/13/diary20180613/"/>
    <id>http://libinyl.github.io/2018/06/13/diary20180613/</id>
    <published>2018-06-12T23:25:53.000Z</published>
    <updated>2018-06-13T12:54:47.045Z</updated>
    
    <content type="html"><![CDATA[<p><code>07:26:48</code> 好不容易打了次电话，竟然是以“醒了”为结局，真是浪费感情…</p><p><code>12:41:56</code> 今天上午毕业典礼，拨流苏，合影。</p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180613%E5%AD%A6%E4%BD%8D%E6%8E%88%E4%BA%881.jpg" alt=""><br><em>中南图书馆</em></p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180613%E5%AD%A6%E4%BD%8D%E6%8E%88%E4%BA%882.jpg" alt=""><br><em>学位授予仪式</em></p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180613%E5%AD%A6%E4%BD%8D%E6%8E%88%E4%BA%883.jpg" alt=""><br><em>快到我啦</em></p><p><code>20:49:55</code> 补一下前几天拍的照片。</p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/IMG_20180606_173424.jpg" alt=""><br><em>湘江 南</em></p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/IMG_20180606_184621.jpg" alt=""><br><em>湘江 北</em></p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/IMG_20180606_184639.jpg" alt=""><br><em>湘江 黄昏</em></p><p><code>20:53:35</code> 毕设即将结束系列。</p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180613%E6%AF%95%E8%AE%BE%E7%BB%93%E6%9D%9F1.jpg" alt=""><br><em>胶装的论文</em></p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180613%E6%AF%95%E8%AE%BE%E7%BB%93%E6%9D%9F2.jpg" alt=""><br><em>即将离我而去的资料袋</em></p><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/diary/diary20180613%E6%AF%95%E8%AE%BE%E7%BB%93%E6%9D%9F3.jpg" alt=""><br><em>跟踪表</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;07:26:48&lt;/code&gt; 好不容易打了次电话，竟然是以“醒了”为结局，真是浪费感情…&lt;/p&gt;
&lt;p&gt;&lt;code&gt;12:41:56&lt;/code&gt; 今天上午毕业典礼，拨流苏，合影。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://yeliang1-12525
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>springMVC学习笔记</title>
    <link href="http://libinyl.github.io/2018/06/12/note-springmvc/"/>
    <id>http://libinyl.github.io/2018/06/12/note-springmvc/</id>
    <published>2018-06-12T11:43:35.000Z</published>
    <updated>2018-06-12T14:42:06.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h1><p><img src="https://yeliang1-1252528682.cos.ap-beijing.myqcloud.com/picture/tech/Springmvc%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB.png" alt=""></p><h1 id="总述"><a href="#总述" class="headerlink" title="总述"></a>总述</h1><p><img src="https://docs.spring.io/spring-framework/docs/4.3.9.RELEASE/spring-framework-reference/html/images/mvc.png" alt=""></p><ul><li><code>Controller</code>一般负责准备一个将一个<strong>view</strong>和<strong>data</strong>映射为一个数据类型为<code>Map</code>的<strong>model</strong>并返回。也可以直接写入数据到返回流中。</li><li>一个<strong>view</strong>反应到代码层面就是一个字符串，对应着视图文件；一个<strong>model</strong>是一个<code>Map</code>，包含着许多键值对，key是某个变量，value是其对应的数据。</li></ul><h1 id="DispatcherServlet"><a href="#DispatcherServlet" class="headerlink" title="DispatcherServlet"></a>DispatcherServlet</h1><p>作为中央Servlet，DispatcherServlet负责分发，由具体的可配置的控件执行实际的工作。</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>DispatcherServlet毕竟也是Servlet，也需要在<code>web.xml</code>中配置。在以下例子中，配置了一个<code>DispatcherServlet</code>,配置了其配置文件<code>app-context.xml</code>的路径，配置了<code>DispatcherServlet</code>接收请求的路径<code>/app/*</code>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/app-context.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>app<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span><span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>app<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/app/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者用注解的方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebApplicationInitializer</span> <span class="keyword">implements</span> <span class="title">WebApplicationInitializer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartup</span><span class="params">(ServletContext servletCxt)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Load Spring web application configuration</span></span><br><span class="line">        AnnotationConfigWebApplicationContext ac = <span class="keyword">new</span> AnnotationConfigWebApplicationContext();</span><br><span class="line">        ac.register(AppConfig.class);</span><br><span class="line">        ac.refresh();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create and register the DispatcherServlet</span></span><br><span class="line">        DispatcherServlet servlet = <span class="keyword">new</span> DispatcherServlet(ac);</span><br><span class="line">        ServletRegistration.Dynamic registration = servletCxt.addServlet(<span class="string">"app"</span>, servlet);</span><br><span class="line">        registration.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">        registration.addMapping(<span class="string">"/app/*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Context-的层级关系"><a href="#Context-的层级关系" class="headerlink" title="Context 的层级关系"></a>Context 的层级关系</h2><ul><li>在Spring中，<code>ApplicationContext</code>是典型容器。在SpringMVC中，<code>WebApplicationContext</code>作为其拓展，成为web环境的Ioc容器。</li><li><code>WebApplicationContext</code>作为<code>DispatcherServlet</code>的配置，与<code>ServletContext</code>和它所关联的<code>Servlet</code>关联。</li></ul><h2 id="特殊的Bean类型"><a href="#特殊的Bean类型" class="headerlink" title="特殊的Bean类型"></a>特殊的Bean类型</h2><h2 id="处理过程"><a href="#处理过程" class="headerlink" title="处理过程"></a>处理过程</h2><p><code>DispatcherServlet</code>对请求的处理流程：</p><ol><li>搜索<code>WebApplicationContext</code>，将其作为一个属性，与请求绑定，以便<code>controller</code>等组件可以使用。</li><li>地域解析器（locale resolver）被绑定在请求上，用于处理地域相关的逻辑，如渲染试图，数据准备等。这是可选的。</li><li>主题解析器（theme resolver）被绑定在请求上，以便view等组件可以获知使用哪个主题。这是可选的。</li><li>如果指定了多部件处理器（multipart file resolver），则请求被包装为<code>MultipartHttpServletRequest</code>，以便后续处理。</li><li>搜索一个合适的处理器（handler）。一旦找到，则与该处理器相关的执行链（execution chain）将被执行，用与准备model或者渲染。</li><li>如果返回了model，则渲染视图。如果没返回model，则不渲染视图。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;依赖关系&quot;&gt;&lt;a href=&quot;#依赖关系&quot; class=&quot;headerlink&quot; title=&quot;依赖关系&quot;&gt;&lt;/a&gt;依赖关系&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://yeliang1-1252528682.cos.ap-beijing.myqcloud.
      
    
    </summary>
    
      <category term="技·术" scheme="http://libinyl.github.io/categories/%E6%8A%80%C2%B7%E6%9C%AF/"/>
    
    
      <category term="Spring" scheme="http://libinyl.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>diary20180612</title>
    <link href="http://libinyl.github.io/2018/06/12/diary20180612/"/>
    <id>http://libinyl.github.io/2018/06/12/diary20180612/</id>
    <published>2018-06-12T11:43:13.000Z</published>
    <updated>2018-06-12T11:45:26.961Z</updated>
    
    <content type="html"><![CDATA[<p><code>19:45:11</code> 今天去了湘雅附二。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;19:45:11&lt;/code&gt; 今天去了湘雅附二。&lt;/p&gt;

      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring框架学习-Core</title>
    <link href="http://libinyl.github.io/2018/06/11/note-spring-framework/"/>
    <id>http://libinyl.github.io/2018/06/11/note-spring-framework/</id>
    <published>2018-06-11T04:25:38.000Z</published>
    <updated>2018-06-11T15:42:27.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IoC"><a href="#IoC" class="headerlink" title="IoC"></a>IoC</h1><h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><ul><li><code>org.springframework.beans</code>和<code>org.springframework.context</code>是IOC容器的基础，都依赖于core包。</li><li>beans包内的<code>BeanFacotry</code>接口提供基本的配置对象的方法。context包内的<code>ApplicationContext</code>是其子接口之一，增加了实用的配置方法，是前者的超集。</li><li><code>org.springframework.context.ApplicationContext</code>代表了IOC容器，负责实例化、配置、装配bean。它通过读取配置元数据来获取实例化等的方式。元数据可以通过xml，注解，或代码来表示。<code>ApplicationContext</code>的一些实现，如<code>ClassPathXmlApplicationContext</code>，<code>FileSystemXmlApplicationContext</code>等提供了方便的读取方法。</li><li>IOC容器读取元数据，结合POJOS，产生所需的系统。</li></ul><p><img src="https://docs.spring.io/spring/docs/5.0.6.RELEASE/spring-framework-reference/images/container-magic.png" alt=""></p><h2 id="Ioc-container-容器"><a href="#Ioc-container-容器" class="headerlink" title="Ioc container 容器"></a>Ioc container 容器</h2><h3 id="元数据的配置方式"><a href="#元数据的配置方式" class="headerlink" title="元数据的配置方式"></a>元数据的配置方式</h3><ul><li>从Spring 2.5开始支持注解配置方法。</li><li>从Spring 3.0开始支持基于java的方式，即通过java类来表示配置。</li></ul><h3 id="IOC容器的实例化和使用"><a href="#IOC容器的实例化和使用" class="headerlink" title="IOC容器的实例化和使用"></a>IOC容器的实例化和使用</h3><ul><li>只需将配置文件的地址作为<strong>资源</strong>传给容器类。如：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"services.xml"</span>, <span class="string">"daos.xml"</span>);</span><br></pre></td></tr></table></figure><ul><li><p>在配置<code>beans.xml</code>等资源文件时，形如“classpath:”的路径是不被推荐的。因为classpath虽然默认是指当前目录，但是也可以配置为其他目录。</p></li><li><p>可以通过容器的<code>getBean</code>方法来获取实例，但没有必要，因为这依赖于Spring的API。应该考虑注解等方式。</p></li></ul><h2 id="Bean"><a href="#Bean" class="headerlink" title="Bean"></a>Bean</h2><p>bean的每个属性都映射为一个<code>bean definition</code>。</p><table><thead><tr><th>class</th><th>Instantiating beans</th></tr></thead><tbody><tr><td>name</td><td>Naming beans</td></tr><tr><td>scope</td><td>Bean scopes</td></tr><tr><td>constructor arguments</td><td>Dependency Injection</td></tr><tr><td>properties</td><td>Dependency Injection</td></tr><tr><td>autowiring mode</td><td>Autowiring collaborators</td></tr><tr><td>lazy-initialization mode</td><td>Lazy-initialized beans</td></tr><tr><td>initialization method</td><td>Initialization callbacks</td></tr><tr><td>destruction method</td><td>Destruction callbacks</td></tr></tbody></table><ul><li>每个bean可以有多个id，多余的id视为别名。</li></ul><h2 id="DI-依赖注入"><a href="#DI-依赖注入" class="headerlink" title="DI 依赖注入"></a>DI 依赖注入</h2><ul><li><p>依赖注入的Spring官方解释：依赖注入是由对象在构造（或从工厂方法返回）之后，仅仅通过构造方法参数、工厂方法参数等定义它们之间依赖关系的过程。容器创造这些bean之后，将对象们依赖的对象注入进去。这个过程从根本上来说是反转的，由bean自己通过构造方法（或Service Locator pattern）来控制依赖对象的实例化或者位置，故也称控制反转。</p></li><li><p>这样的好处是什么？在哪些方面解耦了？</p><ul><li>解耦依赖关系：由于容器帮对象提供了依赖关系，所以对象自己不再去寻找它所依赖的对象，不需要关心其依赖对象的位置或具体类。</li><li>方便测试：当依赖的对象是接口或者抽象类时，可以使用stub或mock来进行单元测试。</li></ul></li><li><p>依赖注入的方式</p><ul><li>基于构造方法注入</li><li>基于Setter方法注入</li></ul></li><li><p>注入方式的比较？</p><ul><li>基于构造方法的注入有强制性。基于Setter的注入方法有可选性（可以通过@Required注解控制可选性）。</li><li>Spring团队主张用基于构造的方法。因为这能防止依赖对象是null。但是当参数过多时，应当考虑重构，将责任分开。</li><li>Setter注入方式需要时刻检查notnull。setter方法使该类的对象可以稍后重新配置或重新注入。因此，通过JMX mbean的管理是setter注入的一个不错的方式。</li><li>当第三方类没有提供任何setter方法，通过构造方法注入是唯一的选择。</li></ul></li><li><p>bean的实例化时机？</p><ul><li>设置为单例模式即“预实例化”的bean在容易创建之后就被创建了。</li><li>其他情况下，随需实例化。</li></ul></li><li><p>循环依赖是什么？怎样解决？</p><ul><li>如果（通过构造方法）配置A依赖B，B依赖A，则抛出异常。</li><li>解决方案：配置为setter注入。</li></ul></li></ul><h3 id="自动装配"><a href="#自动装配" class="headerlink" title="自动装配"></a>自动装配</h3><ul><li>自动装配的几种模式？<ul><li><strong>no</strong> 不自动装配。</li><li><strong>byName</strong> 通过属性name来装配。</li><li><strong>byType</strong>  通过type来装配。</li><li><strong>constructor</strong>  通过构造器来装配。</li></ul></li></ul><h2 id="Bean-作用域"><a href="#Bean-作用域" class="headerlink" title="Bean 作用域"></a>Bean 作用域</h2><ul><li>singlton</li><li>prototype</li><li>request</li><li>session</li><li>application</li><li>websocket</li></ul><h3 id="单例模式作用域"><a href="#单例模式作用域" class="headerlink" title="单例模式作用域"></a>单例模式作用域</h3><ul><li>Ioc容器只创建此对象的一个实例，将其存储在缓存中，每个对其依赖或引用都返回此缓存对象。</li></ul><h2 id="基于Java的容器设置方法"><a href="#基于Java的容器设置方法" class="headerlink" title="基于Java的容器设置方法"></a>基于Java的容器设置方法</h2><p>核心是<code>@Configuration</code>和<code>Bean</code>注解。</p><p><code>@Bean</code>与<code>&lt;bean/&gt;</code>类似，需要与<code>@Configuration</code>搭配使用，而免于用xml来配置。</p><h1 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;IoC&quot;&gt;&lt;a href=&quot;#IoC&quot; class=&quot;headerlink&quot; title=&quot;IoC&quot;&gt;&lt;/a&gt;IoC&lt;/h1&gt;&lt;h2 id=&quot;总览&quot;&gt;&lt;a href=&quot;#总览&quot; class=&quot;headerlink&quot; title=&quot;总览&quot;&gt;&lt;/a&gt;总览&lt;/h2&gt;&lt;u
      
    
    </summary>
    
      <category term="技·术" scheme="http://libinyl.github.io/categories/%E6%8A%80%C2%B7%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://libinyl.github.io/tags/java/"/>
    
      <category term="spring" scheme="http://libinyl.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>diary20180611</title>
    <link href="http://libinyl.github.io/2018/06/11/diary20180611/"/>
    <id>http://libinyl.github.io/2018/06/11/diary20180611/</id>
    <published>2018-06-11T03:27:35.000Z</published>
    <updated>2018-06-11T15:44:30.009Z</updated>
    
    <content type="html"><![CDATA[<p><code>23:23:41</code> 这两天复习Spring，内容真的多。下午自己去河东，顺便吃了顿佰烧。</p><p><code>23:44:06</code> 最近的行程：</p><ul><li>6月13日    院里照相</li><li>6月22日    毕业典礼 扫描所有证件</li><li>7月2日    回家</li><li>7月3日    到家</li><li>7月11日    到北京办理入住</li><li>7月12日    周四 体检</li><li>7月16日    周一 入职</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;23:23:41&lt;/code&gt; 这两天复习Spring，内容真的多。下午自己去河东，顺便吃了顿佰烧。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;23:44:06&lt;/code&gt; 最近的行程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;6月13日    院里照相&lt;/li&gt;
&lt;li&gt;6月22日   
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>diary20180610</title>
    <link href="http://libinyl.github.io/2018/06/10/diary20180610/"/>
    <id>http://libinyl.github.io/2018/06/10/diary20180610/</id>
    <published>2018-06-10T05:12:52.000Z</published>
    <updated>2018-06-10T16:20:29.094Z</updated>
    
    <content type="html"><![CDATA[<p><code>13:13:37</code> 如果早起不干事，还不如多睡会。早早起来，只把毕设什么的打印了。没做什么好事。</p><p><code>00:19:08</code> 今天时间过得挺慢的，看上面一行字都不像今天写的。下载了刺客信条，垃圾的显卡让我无法尽兴。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;13:13:37&lt;/code&gt; 如果早起不干事，还不如多睡会。早早起来，只把毕设什么的打印了。没做什么好事。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;00:19:08&lt;/code&gt; 今天时间过得挺慢的，看上面一行字都不像今天写的。下载了刺客信条，垃圾的显卡让我无法尽兴。&lt;/p
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>thought-body</title>
    <link href="http://libinyl.github.io/2018/06/09/thought-body/"/>
    <id>http://libinyl.github.io/2018/06/09/thought-body/</id>
    <published>2018-06-09T09:22:39.000Z</published>
    <updated>2018-06-12T03:23:47.522Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>column0</th><th>column1</th></tr></thead><tbody><tr><td>2018060810</td><td>138.5</td></tr><tr><td>2018060823</td><td>140.2</td></tr><tr><td>2018060909</td><td>139.5</td></tr><tr><td>2018060913</td><td>139.1</td></tr><tr><td>2018060917</td><td>138.6</td></tr><tr><td>2018060923</td><td>140.3</td></tr><tr><td>2018061017</td><td>140.7</td></tr><tr><td>2018061020</td><td>139.9</td></tr><tr><td>2018061109</td><td>138.2</td></tr><tr><td>2018061123</td><td>140.6</td></tr><tr><td>2018061211</td><td>138.9</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;column0&lt;/th&gt;
&lt;th&gt;column1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2018060810&lt;/td&gt;
&lt;td&gt;138.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018060
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>diary20180609</title>
    <link href="http://libinyl.github.io/2018/06/09/diary20180609/"/>
    <id>http://libinyl.github.io/2018/06/09/diary20180609/</id>
    <published>2018-06-09T00:59:52.000Z</published>
    <updated>2018-06-09T14:33:21.633Z</updated>
    
    <content type="html"><![CDATA[<p><code>9:00:06</code> 最近闲暇时间听过，怎样分配时间呢。</p><p><code>13:06:07</code> 些许健了身。哪怕十分钟，这一天都是赚的。</p><p><code>17:21:23</code> 刷了几道简单的leetoode，感觉不错。</p><p><code>22:31:15</code> 晚上与胡去了凯李咖啡。</p><p>我才意识到问题所在。我止不住的焦虑和好强，来自于高中的习惯。“不学习就是犯罪”，我竟早已被衡中洗脑，而且长久以来都没有意识到。这显然不是好事，但也未必是坏事。坏在没有前辈指引，不知道是对是错。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;9:00:06&lt;/code&gt; 最近闲暇时间听过，怎样分配时间呢。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;13:06:07&lt;/code&gt; 些许健了身。哪怕十分钟，这一天都是赚的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;17:21:23&lt;/code&gt; 刷了几道简单的leetoode，感觉不
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>leetcode刷题学习记录</title>
    <link href="http://libinyl.github.io/2018/06/08/note-leetcode/"/>
    <id>http://libinyl.github.io/2018/06/08/note-leetcode/</id>
    <published>2018-06-08T13:26:57.000Z</published>
    <updated>2018-06-09T11:32:30.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="遇到的子问题："><a href="#遇到的子问题：" class="headerlink" title="遇到的子问题："></a>遇到的子问题：</h1><ol><li>二维数组（矩阵）优雅地按行遍历</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> C = A[<span class="number">0</span>].length;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span>[] row: A)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; C; ++i) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h1><ol><li>对于数组问题，经常把数组的内容索引不区分开，如i与a[i]。只要是索引，大多数情况应有符号。</li></ol><h1 id="算法优化"><a href="#算法优化" class="headerlink" title="算法优化"></a>算法优化</h1><ol><li>是否能替换为位运算？</li><li>涉及奇偶，for循环可否变为<code>i+=2</code>？</li></ol><h1 id="无解时的思路"><a href="#无解时的思路" class="headerlink" title="无解时的思路"></a>无解时的思路</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ol><li>尝试排序？</li><li>涉及多个数组，遍历比较短的数组可以防止越界问题。</li><li>如果for循环遍历不方便，不妨试试while。</li></ol><h1 id="位运算专属题目"><a href="#位运算专属题目" class="headerlink" title="位运算专属题目"></a>位运算专属题目</h1><h2 id="计算一个二进制序列有多少个1"><a href="#计算一个二进制序列有多少个1" class="headerlink" title="- 计算一个二进制序列有多少个1"></a>- 计算一个二进制序列有多少个1</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    count += (xor &gt;&gt; i) &amp; <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>原理：如何判断某位是1？，则<code>&amp;1</code>的结果是<code>1</code>。</p><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (xor != <span class="number">0</span>) &#123;</span><br><span class="line">    xor &amp;= (xor - <span class="number">1</span>);</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原理：每次一个<code>xor &amp;= (xor - 1);</code>都消去最后一个1。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;遇到的子问题：&quot;&gt;&lt;a href=&quot;#遇到的子问题：&quot; class=&quot;headerlink&quot; title=&quot;遇到的子问题：&quot;&gt;&lt;/a&gt;遇到的子问题：&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;二维数组（矩阵）优雅地按行遍历&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="技·术" scheme="http://libinyl.github.io/categories/%E6%8A%80%C2%B7%E6%9C%AF/"/>
    
    
      <category term="数据结构与算法" scheme="http://libinyl.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>diary20180608</title>
    <link href="http://libinyl.github.io/2018/06/08/diary20180608/"/>
    <id>http://libinyl.github.io/2018/06/08/diary20180608/</id>
    <published>2018-06-08T04:24:30.000Z</published>
    <updated>2018-06-08T15:48:19.427Z</updated>
    
    <content type="html"><![CDATA[<p><code>12:24:41</code> 这两天高考，一如既往有很多新闻。打算下午再去一次海底捞看看。</p><p><code>12:35:15</code> 我发现自己已经养成了一个技能。每当心情低落，因琐事而难过，都会告诉自己，这是生理上的化学反应。不过是大脑中的那些化学物质，让我本能地逃跑而已。这样想着，就会好很多。</p><p><code>14:55:05</code> 第一次听到乌鸦叫的声音。应该不能说第一次，只是以前没注意过。“呀——呀——”的叫声，真的很难听，很烦人。</p><p><code>19:45:37</code> 去了海底捞！吃的蛮开心。海底捞的服务仍然十分出色，但是这次没人帮忙涮菜。然后赶在5点前付款，340多块钱的优惠了108块！</p><p><code>20:22:53</code> 没人能拯救我 除了我自己</p><p><code>23:48:06</code> 明天把毕业论文打印。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;12:24:41&lt;/code&gt; 这两天高考，一如既往有很多新闻。打算下午再去一次海底捞看看。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;12:35:15&lt;/code&gt; 我发现自己已经养成了一个技能。每当心情低落，因琐事而难过，都会告诉自己，这是生理上的化学反应。不过是大脑中的那
      
    
    </summary>
    
      <category term="日·记" scheme="http://libinyl.github.io/categories/%E6%97%A5%C2%B7%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
